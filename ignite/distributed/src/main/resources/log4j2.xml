<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--status="WARN" :用于设置log4j2自身内部日志的信息输出级别，默认是OFF-->
<!--monitorInterval="30"  :间隔秒数,自动检测配置文件的变更和重新配置本身-->
<!--<configuration status="INFO" monitorInterval="60" strict="true">-->
<configuration status="INFO">
    <properties>
        <!--自定义一些常量，之后使用${变量名}引用-->
        <property name="logpath">log4j2/ignite</property>
        <property name="charset">UTF-8</property>
        <!--自定义的输出格式-->
        <property name="pattern">%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %level - %msg%n</property>
    </properties>
    <!--appenders:定义输出内容,输出格式,输出方式,日志保存策略等,常用其下三种标签[console,File,RollingFile]-->
    <!--Appender可以理解为日志的输出目的地-->
    <appenders>
        <!--console :控制台输出的配置-->
        <Console name="console" target="SYSTEM_OUT">
            <PatternLayout pattern="${pattern}" charset="${charset}"/>
        </Console>
        <!--RollingRandomAccessFile性能比RollingFile提升官网宣称是20-200%-->
        <RollingRandomAccessFile name="rollingFile" immediateFlush="true" append="true" bufferSize="1024"
                                 fileName="${logpath}/ignite_info.log"
                                 filePattern="${logpath}/ignite_info.log.%d{yyyy-MM-dd}_%i.log">
            <ThresholdFilter level="DEBUG" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${pattern}" charset="${charset}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <OnStartupTriggeringPolicy/>
            </Policies>
        </RollingRandomAccessFile>
        <RollingRandomAccessFile name="errorRollingFile" immediateFlush="true" append="true" bufferSize="4096"
                                 fileName="${logpath}/ignite_error.log"
                                 filePattern="${logpath}/ignite_error.log.%d{yyyy-MM-dd}_%i.log">
                                 ignoreExceptions="false">
            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${pattern}" charset="${charset}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <OnStartupTriggeringPolicy/>
            </Policies>
        </RollingRandomAccessFile>
        <RollingRandomAccessFile name="druid" immediateFlush="true" append="true" bufferSize="1024"
                                 fileName="${logpath}/ignite_druid.log"
                                 filePattern="${logpath}/ignite_druid.log.%d{yyyy-MM-dd}_%i.log">
            <ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${pattern}" charset="${charset}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <OnStartupTriggeringPolicy/>
            </Policies>
        </RollingRandomAccessFile>
    </appenders>

    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <!--additivity="false"表示在该logger中输出的日志不会再延伸到父层logger。这里如果改为true，则会延伸到Root Logger，遵循Root Logger的配置也输出一次。-->

        <!--<Logger additivity="false" name="druid.sql.DataSource" level="INFO">
            <AppenderRef ref="druid"/>
            <AppenderRef ref="console"/>
        </Logger>
        <Logger additivity="false" name="druid.sql.Connection" level="INFO">
            <AppenderRef ref="druid"/>
            <AppenderRef ref="console"/>
        </Logger>-->
        <Logger additivity="false" name="com.alibaba.druid.pool" level="DEBUG">
            <AppenderRef ref="druid"/>
        </Logger>
        <Logger additivity="false" name="org.apache.ignite" level="debug">
            <AppenderRef ref="rollingFile"/>
        </Logger>
        <!-- Root节点用来指定项目的根日志，如果没有单独指定Logger，那么就会默认使用该Root日志输出 -->
        <AsyncRoot level="DEBUG" additivity="false" includeLocation="true">
            <!--<AppenderRef ref="console"/>
            <AppenderRef ref="rollingFile"/>
            <AppenderRef ref="errorRollingFile"/>-->

        </AsyncRoot>
    </loggers>
</configuration>