<?xml version="1.0" encoding="UTF-8"?>

<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
    <!--
        Alter configuration below as needed.
    -->
    <context:property-placeholder ignore-unresolvable="true" location="classpath:mysql.properties" />

    <bean id="grid.cfg" class="org.apache.ignite.configuration.IgniteConfiguration">
        <property name="clientMode" value="true"/>
        <!--对等类加载是否启用，默认为false-->
        <property name="peerClassLoadingEnabled" value="true"/>
        <!-- 对等类排除路径 EP用 -->
        <property name="PeerClassLoadingLocalClassPathExclude">
            <list>
                <value>com.xz.ignite.basefunction.entryprocessor.TempEP</value>
                <value>com.xz.ignite.basefunction.entryprocessor.TempEPBinary</value>
                <value>com.xz.ignite.basefunction.entryprocessor.*</value>
            </list>
        </property>
        <!-- 部署模式 -->
        <property name="deploymentMode" value="SHARED"/>
        <!-- 网络条件不佳时使用 默认为null-->
        <property name="SystemWorkerBlockedTimeout" value="100000"/>
        <!-- 网络条件不佳时修改 默认 10000-->
        <property name="FailureDetectionTimeout" value="100000"/>

        <!--系统线程池大小 处理所有与缓存相关的操作，除了SQL以及其它的查询类型 默认8或CPU -->
        <property name="systemThreadPoolSize" value="8"/>
        <!--管理线程池大小 负责处理内核和Visor客户端消息 默认4 -->
        <property name="managementThreadPoolSize" value="8"/>
        <!--公共线程池大小 负责Ignite的计算网格 默认8或CPU -->
        <property name="publicThreadPoolSize" value="8"/>
        <!--查询线程池大小 处理集群内所有的SQL、扫描和SPI查询 默认8或CPU -->
        <property name="queryThreadPoolSize" value="8"/>
        <!--服务线程池大小 负责Ignite的服务网格 与公共线程池大小一致 -->
        <property name="serviceThreadPoolSize" value="8"/>
        <!--并行线程池大小 显著加速基本的缓存操作以及事务 EP等 默认8或CPU -->
        <property name="stripedPoolSize" value="8"/>
        <!--数据流线程池大小 处理IgniteDataStreamer流数据 默认8或CPU -->
        <property name="dataStreamerThreadPoolSize" value="8"/>
        <!--平衡线程池大小 缓存再平衡用 默认4-->
        <property name="rebalanceThreadPoolSize" value="2"/>
        <!--对等类加载线程池大小 加载远端类 默认2 -->
        <property name="peerClassLoadingThreadPoolSize" value="2"/>
        <!--异步回调线程池大小 缓存持续查询过滤功能 默认8或CPU -->
        <property name="asyncCallbackPoolSize" value="8"/>
        <!--用户验证是否开启 默认为false 开启后默认用户名密码都是ignite-->
        <property name="authenticationEnabled" value="false"/>
        <!--<property name="gridLogger" >
            <bean class="org.apache.ignite.logger.log4j.Log4JLogger">
                <constructor-arg type="java.lang.String" value="/apphome/ignite/config/node-log4j.xml"/>
            </bean>
        </property>
        &lt;!&ndash;数据存储配置 &ndash;&gt;
        <property name="dataStorageConfiguration">
            <bean class="org.apache.ignite.configuration.DataStorageConfiguration">
                <property name="pageSize" value="#{4 * 1024}"/>
                &lt;!&ndash; 并发级别 level 设置为CPU数量&ndash;&gt;
                <property name="concurrencyLevel" value="4"/>
                &lt;!&ndash; 写入优化 &ndash;&gt;
                <property name="writeThrottlingEnabled" value="true"/>
                &lt;!&ndash; 数据存储指标 &ndash;&gt;
                <property name="metricsEnabled" value="false"/>
                &lt;!&ndash;数据分布配置 默认是都存放到内存中，此处进行持久化 &ndash;&gt;
                <property name="defaultDataRegionConfiguration">
                    <bean class="org.apache.ignite.configuration.DataRegionConfiguration">
                        &lt;!&ndash;是否持久化到磁盘 true为持久化 &ndash;&gt;
                        <property name="persistenceEnabled" value="true"/>
                        <property name="name" value="default_Region"/>
                        &lt;!&ndash; 4G initial size. 初始化内存&ndash;&gt;
                        <property name="initialSize" value="#{2L * 1024 * 1024 * 1024}" />
                        &lt;!&ndash; 10G maximum size. 最大内存大小&ndash;&gt;
                        <property name="maxSize" value="#{4L * 1024 * 1024 * 1024}" />
                        <property name="checkpointPageBufferSize" value="#{1L *1024* 1024 * 1024}" />
                        &lt;!&ndash; 数据区指标  &ndash;&gt;
                        <property name="metricsEnabled" value="false"/>
                    </bean>
                </property>


                &lt;!&ndash; Defining several data regions for different memory regions 持久化数据存储目录 ******注意该地方目录需修改成自己的****** &ndash;&gt;

                <property name="storagePath" value="/apphome/ignite/data/persistence/storage" />
                <property name="walArchivePath" value="/apphome/ignite/data/persistence/walArchive" />
                <property name="walPath" value="/apphome/ignite/data/persistence/wal" />
            </bean>
        </property>
        <property name="localHost" value="${ip}"/>-->
        <property name="transactionConfiguration">
            <bean class="org.apache.ignite.configuration.TransactionConfiguration">
                <!--长期运行事务阻断分区映射交换的最大时间，时间一到，所有的未完成事务都会回滚，让分区映射交换进程先完成 配置20秒-->
                <property name="TxTimeoutOnPartitionMapExchange" value="20000"/>
            </bean>
        </property>
        <!-- 系统事件 -->
        <property name="includeEventTypes">
                <util:constant static-field="org.apache.ignite.events.EventType.EVTS_ALL"/>
        </property>
        <!-- Ignite自己本身有发现机制，只需要配置静态IP即可相互发现；单机只需要配置自己即可-->
        <property name="discoverySpi">

            <bean class="org.apache.ignite.spi.discovery.zk.ZookeeperDiscoverySpi">
                <property name="zkConnectionString" value="172.32.148.244:2181,172.32.148.245:2181,172.32.148.246:2181"/>
                <property name="sessionTimeout" value="60000"/>
                <property name="zkRootPath" value="/xzIgnite280"/>
                <property name="joinTimeout" value="30000"/>
            </bean>
        </property>
        <!--网络超时时长 默认5000-->
        <property name="networkTimeout" value="60000"/>
    </bean>

    <!--<bean id="mysqlDataSource" class="com.mysql.jdbc.jdbc2.optional.MysqlDataSource">
        <property name="URL" value="${mysql.url}"/>
        <property name="user" value="${mysql.username}"/>
        <property name="password" value="${mysql.password}"/>
    </bean>-->

    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
        <property name="driverClassName" value="${mysql.driver}" />

        <!-- 基本属性 url、user、password -->
        <property name="url" value="${mysql.url}" />
        <property name="username" value="${mysql.username}" />
        <property name="password" value="${mysql.password}" />

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${mysql.pool.init}" />
        <property name="minIdle" value="${mysql.pool.minIdle}" />
        <property name="maxActive" value="${mysql.pool.maxActive}" />

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="validationQuery" value="${mysql.testSql}" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小（Oracle使用）
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" /> -->

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat" />
    </bean>
</beans>

